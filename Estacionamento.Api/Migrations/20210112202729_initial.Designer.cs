// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingContext;

namespace Estacionamento.Api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210112202729_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParkingModel.Carro", b =>
                {
                    b.Property<int>("CaroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Carro_Id")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Placa")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CaroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("ParkingModel.Patio", b =>
                {
                    b.Property<int>("Patio_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("Cpf_Id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Excluido")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraSaida")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Mensalista")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Placa")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Vaga")
                        .HasColumnType("int");

                    b.Property<double>("ValorFinal")
                        .HasColumnType("double");

                    b.HasKey("Patio_Id");

                    b.ToTable("Patio");
                });

            modelBuilder.Entity("ParkingModel.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("Cpf_Id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("NomeCompleto")
                        .HasColumnName("NomesCompleto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ParkingModel.Carro", b =>
                {
                    b.HasOne("ParkingModel.Usuario", "Usuario")
                        .WithMany("Carros")
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
